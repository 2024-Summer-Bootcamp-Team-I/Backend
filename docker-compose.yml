version: '3'
services:
  # cadvisor:
  #   image: google/cadvisor:latest
  #   container_name: cadvisor
  #   volumes:
  #     - /:/rootfs:ro
  #     - /var/run:/var/run:ro
  #     - /sys:/sys:ro
  #     - /var/lib/docker/:/var/lib/docker:ro
  #     - /dev/disk/:/dev/disk:ro
  #   ports:
  #     - "8080:8080"
  #   networks:
  #     - monitoring
  #   restart: always

  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: prometheus
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #   ports:
  #     - "9090:9090"
  #   networks:
  #     - monitoring
  #   restart: always

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: grafana
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - monitoring
  #   restart: always

  db:
    image: postgres
    container_name: db
    volumes:
      - ./data/db:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - backend-network
    env_file:
      - .env

  backend:
    container_name: backend
    build: ./
    command: >
      sh -c "
        python manage.py collectstatic --noinput &&
        python manage.py migrate &&
        gunicorn --bind 0.0.0.0:8000 djangoIteam.wsgi:application
      "
    volumes:
      - .:/Backend
      - ./service-account-file.b64:/Backend/service-account-file.b64
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - backend-network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./staticfiles:/usr/src/app/staticfiles

    depends_on:
      - backend
    networks:
      - backend-network

networks:
  backend-network:
    driver: bridge
  monitoring:
    driver: bridge
